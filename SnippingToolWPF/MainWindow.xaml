<Window x:Class="SnippingToolWPF.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:SnippingToolWPF"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:specialUiElements="clr-namespace:SnippingToolWPF.Control.SpecialUIElements"
        xmlns:sidePanel1="clr-namespace:SnippingToolWPF.SidePanel"
        Title="Snipping Tool"
        Width="800" Height="550"
        Background="#FFF4F4F4" FontFamily="Segue UI Light" AllowsTransparency="True"
        FontSize="13" UseLayoutRounding="True" mc:Ignorable="d" WindowStyle="None" ResizeMode="CanResize">
    <!--  TODO Make custom title bar  -->

    <!-- This makes it so the user can resize the window even without borders (AllowTransparency = true) -->
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="1"
            CornerRadius ="0"
            ResizeBorderThickness="4"
            GlassFrameThickness="0">
        </WindowChrome>
    </WindowChrome.WindowChrome>
    
    <Window.DataContext>
        <local:DrawingViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!--  TODO: Add slider control for zoom in  -->

        <!--  TODO: if user pastes on the canvas (with text) select the text panel + paste the text in a textbox  -->
        <Canvas x:Key="ScreenshotImage" Width="32"
                Height="32" x:Shared="False">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/ScreenCapture.png"
                   Width="32" Height="32" />
        </Canvas>

        <!-- Images for the Top Bar Icons-->
        <DataTemplate x:Key="PencilsTemplate">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/pencilsTopBar.png"
                   Width="32" Height="32" />
        </DataTemplate>

        <DataTemplate x:Key="ShapesTemplate">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/shapesTopBar.png"
                   Width="32" Height="32" />
        </DataTemplate>

        <DataTemplate x:Key="StickersTemplate">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/stickerTopBar.png"
                   Width="32" Height="32" />
        </DataTemplate>

        <DataTemplate x:Key="TextTemplate">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/textTopBar.png"
                   Width="32" Height="32" />
        </DataTemplate>

        <DataTemplate x:Key="EditTemplate">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/editTopBar.png"
                   Width="32" Height="32" />
        </DataTemplate>

        <Canvas x:Key="HistoryTemplate" Width="32" Height="32">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/historyTopBar.png"
                   Width="32" Height="32" />
        </Canvas>

        <Canvas x:Key="MenuTemplate" Width="32" Height="32">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/menuTopBar.png"
                   Width="32" Height="32" />
        </Canvas>

        <Canvas x:Key="EmptyCanvasTemplate" Width="32" Height="32">
            <Image Source="pack://application:,,,/SnippingToolWPF;component/Assets/Images/emptyCanvas.png"
                   Width="28" Height="28" />
        </Canvas>


        <GridLength x:Key="SidePanelWidthGrid">240</GridLength>
    </Window.Resources>

    <DockPanel>

        <!--#region Top Bar -->
        <Border Background="{StaticResource MainBackgroundBrush}" DockPanel.Dock="Top" Height="30">

            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick"
                              Command="{Binding MoveWindowCommand}" />
            </Border.InputBindings>

            <Grid>
                <Grid.Resources>
                    <Style BasedOn="{StaticResource TitleBarButton}" TargetType="Button" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>

                <!-- TODO: Add Project name property-->
                <TextBlock Text="project name - Snipping Tool" Foreground="{StaticResource MainForegroundBrush}"
                           FontFamily="Segue UI Light"
                           VerticalAlignment="Center" HorizontalAlignment="Left"
                           Grid.Column="0" Grid.ColumnSpan="2" Padding="15,0,0,0" />

                <StackPanel Grid.Column="1" HorizontalAlignment="Right"
                            Orientation="Horizontal">
                    <Button Content="-" FontSize="20"
                            Command="{Binding MinimizeWindowCommand}"
                            Padding="0,0,0,0" />
                    <Button Content="🗖"
                            Command="{Binding MaximizeWindowCommand}"
                            Padding="0,0,0,0" />
                    <Button Content="X"
                            Command="{Binding ShutDownWindowCommand}"
                            Padding="0,2,0,0" />
                </StackPanel>
            </Grid>
        </Border>
        <!--#endregion -->

        <DockPanel Background="{StaticResource MainBackgroundBrush}"
                   DockPanel.Dock="Top"
                   TextElement.Foreground="{StaticResource MainForegroundBrush}">


            <DockPanel.InputBindings>
                <!-- Make it so the user can drag the window from next to the topbar -->
                <MouseBinding MouseAction="LeftClick"
                              Command="{Binding MoveWindowCommand}" />
            </DockPanel.InputBindings>
            <DockPanel.Resources>
                <Style BasedOn="{StaticResource ButtonWithIcon}" TargetType="ToggleButton" />
                <Style BasedOn="{StaticResource ButtonWithIcon}" TargetType="Button" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                                 Color="{StaticResource SemiWhiteColor}" />
            </DockPanel.Resources>

            <ToggleButton x:Name="MenuButton"
                          specialUiElements:ButtonWithIcon.Icon="{StaticResource MenuTemplate}"
                          DockPanel.Dock="Left" />
            <Button specialUiElements:ButtonWithIcon.Icon="{StaticResource HistoryTemplate}"
                    specialUiElements:ButtonWithIcon.IconLocation="Top" Content="History"
                    DockPanel.Dock="Right" />

            <ListBox x:Name="ToolBarTopMiddle" HorizontalAlignment="Center"
                     HorizontalContentAlignment="Center" Background="Transparent"
                     BorderThickness="0"
                     Foreground="{StaticResource MainForegroundBrush}"
                     ItemsSource="{Binding AllSidePanelContentKinds}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     SelectedItem="{Binding SidePanelContentKind}">
                <ListBox.Resources>
                    <!--  Selecting the correct sidepanel based on topbar button press  -->
                    <sidePanel1:SidePanelContentKindIconSelector x:Key="SidePanelContentKindIconSelector"
                                                                 Pencils="{StaticResource PencilsTemplate}"
                                                                 Shapes="{StaticResource ShapesTemplate}"
                                                                 Stickers="{StaticResource StickersTemplate}"
                                                                 Text="{StaticResource TextTemplate}"
                                                                 Edit="{StaticResource EditTemplate}" />
                </ListBox.Resources>
                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource CustomListBoxItem}" TargetType="ListBoxItem">
                        <Setter Property="specialUiElements:ButtonWithIcon.Icon"
                                Value="{Binding }" />
                        <Setter Property="specialUiElements:ButtonWithIcon.IconTemplateSelector"
                                Value="{StaticResource SidePanelContentKindIconSelector}" />
                        <Setter Property="specialUiElements:ButtonWithIcon.IconLocation"
                                Value="Top" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </DockPanel>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="{StaticResource SidePanelWidthGrid}" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--  Creating to rectangles to draw the background color  -->
            <Border Grid.Row="0" Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Background="{StaticResource AlternateBackgroundBrush}" />

            <DockPanel x:Name="SecondaryTopPanel" Grid.Row="0"
                       Grid.Column="0" DockPanel.Dock="Top">
                <DockPanel.Resources>
                    <Style BasedOn="{StaticResource ButtonWithIcon}" TargetType="Button" />
                </DockPanel.Resources>
                <Button x:Name="TakeScreenshot"
                        Margin="0,0,8,0" Padding="6"
                        Command="{Binding TakeScreenshot}"
                        specialUiElements:ButtonWithIcon.Icon="{StaticResource ScreenshotImage}"
                        specialUiElements:ButtonWithIcon.IconLocation="Left" Content="Screenshot"
                        Foreground="{StaticResource AlternateForegroundBrush}" />
                <Button x:Name="EmptyCanvas"
                        Command="{Binding ClearCanvas}"
                        Padding="6"
                        specialUiElements:ButtonWithIcon.Icon="{StaticResource EmptyCanvasTemplate}"
                        specialUiElements:ButtonWithIcon.IconLocation="Left" Content="Empty Canvas"
                        Foreground="{StaticResource AlternateForegroundBrush}" />
                <TextBlock />
            </DockPanel>

            <Border x:Name="MenuBar" Grid.Row="0"
                    Grid.RowSpan="2" Grid.Column="0"
                    Width="250" HorizontalAlignment="Left"
                    VerticalAlignment="Stretch" Panel.ZIndex="1"
                    Background="LightBlue"
                    Visibility="{Binding ElementName=MenuButton, Path=IsChecked, 
                    Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Border Grid.Row="0" Grid.RowSpan="2"
                    Grid.Column="1"
                    Background="{StaticResource AlternateBackgroundBrush}" />

            <Border x:Name="SidePanelHeader" Grid.Row="0"
                    Grid.Column="1">
                <TextBlock Margin="10,0,5,0" VerticalAlignment="Bottom"
                           FontSize="25"
                           Text="{Binding SidePanelContent.Header, FallbackValue={x:Null}}" />
            </Border>

            <!-- Drawing canvas gets updated whenever a user opens a new sidepanel or the user selects a new tool-->
            <local:DrawingCanvas Grid.Row="1" Grid.Column="0"
                                 Shapes="{Binding DrawingObjects}"
                                 Tool="{Binding SidePanelContent.Tool, FallbackValue={x:Null}}"
                                 Screenshot="{Binding Screenshot}"
                                 SelectedItem="{Binding SelectedShape}" />

            <Border x:Name="SidePanel" Grid.Row="1"
                    Grid.Column="1" DockPanel.Dock="Right">
                <ContentPresenter Content="{Binding SidePanelContent}" />
            </Border>
        </Grid>
    </DockPanel>
</Window>