<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:snippingToolWPF="clr-namespace:SnippingToolWPF">
    <Style x:Key="CustomCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator VerticalAlignment="Center" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Border x:Name="CheckBoxBorder" Background="Transparent"
                                        BorderBrush="{StaticResource LightBorderBrush}"
                                        BorderThickness="1" />
                                <TextBlock x:Name="CheckMark" HorizontalAlignment="Center"
                                           VerticalAlignment="Center" FontSize="11"
                                           Foreground="{StaticResource MainBackgroundBrush}"
                                           Text="✔" Visibility="Collapsed" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="6,0,0,0" HorizontalAlignment="Left"
                                          VerticalAlignment="Center" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{Binding Path=(snippingToolWPF:ColorAssist.HoverBackgroundFill), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{Binding Path=(snippingToolWPF:ColorAssist.HoverBackgroundBorder), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsPressedBackgroundFill), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsPressedBackgroundBorder), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsCheckedBackgroundFill), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsCheckedBackgroundBorder), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsEnabledBackgroundFill), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsEnabledBackgroundBorder), RelativeSource={RelativeSource TemplatedParent}}" />
                            <!--<Setter Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>