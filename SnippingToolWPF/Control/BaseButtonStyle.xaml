<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:fa6="http://schemas.fontawesome.com/icons/svg"
                    xmlns:snippingToolWPF="clr-namespace:SnippingToolWPF">

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="{StaticResource AlternateBackgroundBrush}"
                            BorderBrush="{StaticResource LightBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{StaticResource HoverBorderBrush}" /> 
                            <!--  TODO make this work  -->
                            <Setter TargetName="contentPresenter" Property="fa6:SvgAwesome.PrimaryColor" Value="Red" /> 
                            <!--  TODO make this work  -->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsPressedBackgroundFill), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsPressedBackgroundBorder), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsCheckedBackgroundFill), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsCheckedBackgroundBorder), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsEnabledBackgroundFill), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(snippingToolWPF:ColorAssist.IsEnabledBackgroundBorder), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type RadioButton}" />
    <Style BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type ToggleButton}" />

</ResourceDictionary>